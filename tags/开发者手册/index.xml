<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发者手册 on Yizhou&#39;s Website</title>
    <link>https://wuyizhou.com/tags/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/</link>
    <description>Recent content in 开发者手册 on Yizhou&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Apr 2022 01:52:54 +0000</lastBuildDate>
    <atom:link href="https://wuyizhou.com/tags/%E5%BC%80%E5%8F%91%E8%80%85%E6%89%8B%E5%86%8C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>前端的技术栈理解</title>
      <link>https://wuyizhou.com/posts/frontend-terms/</link>
      <pubDate>Fri, 22 Apr 2022 01:52:54 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/frontend-terms/</guid>
      <description>最近几年单页应用程序发展非常迅速，从早期通过Javascript写入大量html模版去做单页程序（SPA），到现在的React、Vue（最为</description>
    </item>
    <item>
      <title>Python数据集合</title>
      <link>https://wuyizhou.com/posts/python-list/</link>
      <pubDate>Mon, 25 Jun 2018 13:21:31 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-list/</guid>
      <description>列表 🔗列表是有序可变的数据集合，并且一对[]来表示这是一个列表，元素之间逗号分隔，每个数据之间有逗号分隔，列表基本上可以包含很多数据类型，下</description>
    </item>
    <item>
      <title>Python数据类型与操作符</title>
      <link>https://wuyizhou.com/posts/python-datatype/</link>
      <pubDate>Mon, 25 Jun 2018 09:26:05 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-datatype/</guid>
      <description>算术运算符 🔗 + 加 - 减 * 乘 / 除 % 取余（相除后的余数） ** 取幂（注意 ^ 并不执行该运算，你可能在其他语言中见过这种情形） // 相除后向下取整到最接近的整</description>
    </item>
    <item>
      <title>Python生成器</title>
      <link>https://wuyizhou.com/posts/python-generator/</link>
      <pubDate>Mon, 04 Jun 2018 08:29:36 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-generator/</guid>
      <description>什么是生成器(generator)？ 🔗在Python中提供了一种名为generator的对象，他是通过next函数去中断执行并且genera</description>
    </item>
    <item>
      <title>Python 列表生成表达式</title>
      <link>https://wuyizhou.com/posts/python-list-render/</link>
      <pubDate>Mon, 04 Jun 2018 02:45:42 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-list-render/</guid>
      <description>如何生成列表？ 🔗先试想一下，如果你需要生成1-50的数值列表，如果没有列表生成式你将会这样来做： x = [] i = 1 while i &amp;lt;= 50: x.append(i) i += 1 还有一种方法就是</description>
    </item>
    <item>
      <title>Python函数参数</title>
      <link>https://wuyizhou.com/posts/python-func-par/</link>
      <pubDate>Fri, 01 Jun 2018 04:23:15 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-func-par/</guid>
      <description>位置参数 🔗位置参数是指定了多少参数，就必须输入多少参数，否则就会报错。也可以把位置参数理解为必须参数，如果没有输入同等的参数，就会报错，比如</description>
    </item>
    <item>
      <title>Anaconda入门教程</title>
      <link>https://wuyizhou.com/posts/anaconda/</link>
      <pubDate>Tue, 29 May 2018 10:24:42 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/anaconda/</guid>
      <description>Anaconda是什么？ 🔗Anaconda可以理解为Python的软件发行版，可以用来管理包、环境，但是Anaconda主要针对于数据科学。</description>
    </item>
    <item>
      <title>Python头部注释</title>
      <link>https://wuyizhou.com/posts/python-coding-settings/</link>
      <pubDate>Wed, 23 May 2018 08:22:38 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/python-coding-settings/</guid>
      <description>#!/usr/bin/env python3 # -*- coding: utf-8 -*- 在刚开始学习Python的时候遇到了上面的疑问，这些疑问感觉很奇怪，应为对于Nodejs这样的语言，这些问题是不会存在的，后来</description>
    </item>
    <item>
      <title>HTML表格的加载优化</title>
      <link>https://wuyizhou.com/posts/html-table-preloaded/</link>
      <pubDate>Wed, 14 Mar 2018 07:48:49 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/html-table-preloaded/</guid>
      <description>在HTML设计数据展示的时候会经常使用到HTML表格来展示数据，但是如果数据量过大，就导致表格显示慢，因为在HTML中，表格的显示是需要等待</description>
    </item>
    <item>
      <title>汇编语言学习笔记（四）：寄存器[内存访问]</title>
      <link>https://wuyizhou.com/posts/learning-assembly-4/</link>
      <pubDate>Fri, 23 Feb 2018 16:45:57 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/learning-assembly-4/</guid>
      <description>内存中字的储存 🔗在8086CPU中，寄存器为16位，可以储存一个字(1Word=2Byte)，拿ax来说，低8位放在al中，高8位放在ah中</description>
    </item>
    <item>
      <title>汇编语言学习笔记（三）：初识Debug</title>
      <link>https://wuyizhou.com/posts/learning-assembly-3/</link>
      <pubDate>Fri, 09 Feb 2018 09:06:14 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/learning-assembly-3/</guid>
      <description>什么是Debug？Debug是DOS、Windows提供的8086程序调试工具，可以查看CPU各种寄存器的内容，内存情况和机器码级跟踪程序的</description>
    </item>
    <item>
      <title>汇编语言学习笔记（二）：寄存器</title>
      <link>https://wuyizhou.com/posts/learning-assembly-2/</link>
      <pubDate>Mon, 05 Feb 2018 15:38:40 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/learning-assembly-2/</guid>
      <description>为什么要了解寄存器 🔗为什么了解寄存器？因为CPU是计算机的大脑，可以通过指令读写寄存器实现对CPU的控制，你试想一下如果你的大脑不能控制只能</description>
    </item>
    <item>
      <title>汇编语言学习笔记（一）：基础知识</title>
      <link>https://wuyizhou.com/posts/learning-assembly-1/</link>
      <pubDate>Thu, 01 Feb 2018 13:55:06 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/learning-assembly-1/</guid>
      <description>前言 🔗此文章如出现歧义或错误的地方请谅解，这篇文章是我在学习汇编的时候同时记录下来的笔记，然后通过教程的方式发表出来，因为通过这样的方式发表</description>
    </item>
    <item>
      <title>ES6-Class类</title>
      <link>https://wuyizhou.com/posts/es6-class/</link>
      <pubDate>Tue, 18 Jul 2017 07:46:51 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-class/</guid>
      <description>书籍参考：《ECMAScript 6入门》 作者：阮一峰 文档参考：MDN 概念 🔗ES6提供了Class语句用于更的理解语义以及更接近传统的编程语言</description>
    </item>
    <item>
      <title>ES7-async函数</title>
      <link>https://wuyizhou.com/posts/es7-async/</link>
      <pubDate>Mon, 17 Jul 2017 09:53:10 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es7-async/</guid>
      <description>参考文档：MDN 概念 🔗ES7提供了一个异步解决方案async函数容易，它的作用非常简单，几个异步操作并且这几个是有依赖的，如果按照我们往常的</description>
    </item>
    <item>
      <title>es6-promise</title>
      <link>https://wuyizhou.com/posts/es6-promise/</link>
      <pubDate>Sun, 16 Jul 2017 16:32:08 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-promise/</guid>
      <description>书籍参考：《ECMAScript 6入门》 作者：阮一峰 文档参考：MDN 概念 🔗Promise最初在社区提出的一个异步解决的方案，最后ES6将它加</description>
    </item>
    <item>
      <title>ES6-Generator函数</title>
      <link>https://wuyizhou.com/posts/es6-generator/</link>
      <pubDate>Sun, 16 Jul 2017 06:26:06 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-generator/</guid>
      <description>书籍参考：《ECMAScript 6入门》 作者：阮一峰 文档参考：MDN 概念 🔗ES6提供了一种Generator函数，用来解决异步编程的方案，可</description>
    </item>
    <item>
      <title>ES6-iterator遍历接口</title>
      <link>https://wuyizhou.com/posts/es6-iterator/</link>
      <pubDate>Sat, 15 Jul 2017 13:43:25 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-iterator/</guid>
      <description>书籍参考：《ECMAScript 6入门》 作者：阮一峰 Iterator概念 🔗ES6发布后Javascript的数据集合对象有Array、Obj</description>
    </item>
    <item>
      <title>ES6新特性-Map和WeakMap</title>
      <link>https://wuyizhou.com/posts/es6-map-weamap/</link>
      <pubDate>Tue, 11 Jul 2017 08:54:39 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-map-weamap/</guid>
      <description>参考文档：MDN Map结构 🔗在Javascript中，对象是以键值对的方式存在的，其中的键名是以字符串或者数值以及ES6提出的新的数据类型S</description>
    </item>
    <item>
      <title>es6新特性:Set和WeakSet</title>
      <link>https://wuyizhou.com/posts/es6-set-weakset/</link>
      <pubDate>Mon, 10 Jul 2017 07:43:42 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-set-weakset/</guid>
      <description>书籍参考：《ECMAScript 6入门》 作者：阮一峰 文档参考：MDN ES6提供了两个新的数据结构：Set和WeakSet数据结构，两个结构很</description>
    </item>
    <item>
      <title>es6新数据类型-Symbol</title>
      <link>https://wuyizhou.com/posts/ecmascript-symbol/</link>
      <pubDate>Thu, 06 Jul 2017 07:25:12 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/ecmascript-symbol/</guid>
      <description>参考：《ES6标准入门教程》 作者：阮一峰 Symbol原始类型 🔗Javascript一共有6种原始数据类型，分别为： undefined null Boolean Object String Array ES6新增加了</description>
    </item>
    <item>
      <title>ES6箭头函数</title>
      <link>https://wuyizhou.com/posts/es6-arrow-function/</link>
      <pubDate>Thu, 06 Jul 2017 02:22:32 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/es6-arrow-function/</guid>
      <description>参考：《ES6标准入门教程》 作者：阮一峰 在ES6中允许了一种新函数方式“箭头函数”，它大概的如下： var a = (x) =&amp;gt; x; 等同 var a = function(x){ return x; } 如果不需要参</description>
    </item>
    <item>
      <title>ES6函数的扩展</title>
      <link>https://wuyizhou.com/posts/ecmascript-func/</link>
      <pubDate>Wed, 05 Jul 2017 08:18:49 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/ecmascript-func/</guid>
      <description>参考：《ES6标准入门教程》 作者：阮一峰 一、函数的默认值设置 🔗在ES5的时候如果一个函数的参数必须为有效值，那么我们通常会这样做一个判断： function</description>
    </item>
    <item>
      <title>Webpack快速入门教程</title>
      <link>https://wuyizhou.com/posts/webpack/</link>
      <pubDate>Tue, 06 Jun 2017 11:06:26 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/webpack/</guid>
      <description>1、简介 🔗此教程涉及不深入，并除去了很多复杂的东西，记录也坚持以最简单为主，让初学者大概对webpack有一个简单的系统认识，更好的去进一步</description>
    </item>
    <item>
      <title>Nodejs 处理gb2312内容乱码问题</title>
      <link>https://wuyizhou.com/posts/nodejs-gb2312/</link>
      <pubDate>Sun, 17 Jul 2016 03:07:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/nodejs-gb2312/</guid>
      <description>在使用cheerio处理request模块返回的gb2312网页出现了乱码，从开始一直排查问题，一直排查到request、cheerio都有</description>
    </item>
    <item>
      <title>浅谈Javascript闭包</title>
      <link>https://wuyizhou.com/posts/javascript-closure/</link>
      <pubDate>Fri, 27 Mar 2015 20:01:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-closure/</guid>
      <description>垃圾回收器 🔗我个人把闭包抽象的称之为”阻止垃圾回收器的函数”或者”有权访问另一个函数内部变量的函数&amp;quot;(当然这个是我个人的理解方式，</description>
    </item>
    <item>
      <title>事件捕获与事件冒泡</title>
      <link>https://wuyizhou.com/posts/js-event/</link>
      <pubDate>Mon, 23 Mar 2015 21:37:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/js-event/</guid>
      <description>事件流 🔗在理解这两个概念之前可以先来理解一个概念叫：事件流，指的是触发事件的先后顺序。可以把事件冒泡和事件捕获想成对于事件流的一种实现方式。</description>
    </item>
    <item>
      <title>Call与Apply</title>
      <link>https://wuyizhou.com/posts/js-call-apply/</link>
      <pubDate>Mon, 23 Mar 2015 01:05:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/js-call-apply/</guid>
      <description>1、前言 🔗ECMAscript中提供了两个方法(call,apply)用于改变对象内部的this指针，它们两个的作用都是一样的，但是传递的参</description>
    </item>
    <item>
      <title>Javascript自定义事件</title>
      <link>https://wuyizhou.com/posts/javascript-custom-event/</link>
      <pubDate>Sun, 18 Jan 2015 18:31:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-custom-event/</guid>
      <description>自定义事件在很多地方都会用到，然后跟着书实例了几次，然后详细注释，也算给自己做了一个笔记。 1 //定义一个自定义事件类 2 //定义一个实例属性用</description>
    </item>
    <item>
      <title>JSON数据格式</title>
      <link>https://wuyizhou.com/posts/json/</link>
      <pubDate>Tue, 13 Jan 2015 01:23:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/json/</guid>
      <description>JSON全称为：JavaScript Object Notation，中文为：Javascript对象表示法。是Douglas Crockford在2006</description>
    </item>
    <item>
      <title>Nodejs微信公众号接口</title>
      <link>https://wuyizhou.com/posts/nodejs-publicwechat-api/</link>
      <pubDate>Sun, 11 Jan 2015 19:50:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/nodejs-publicwechat-api/</guid>
      <description>代码重要部分都已详细注释，test.js为实例，如果启动url请求，那么程序默认对json格式数据友好，如果有特殊需要，请自行修改返回数据的</description>
    </item>
    <item>
      <title>HTML5跨文档消息传递</title>
      <link>https://wuyizhou.com/posts/html5-cross-documents-send-messages/</link>
      <pubDate>Thu, 08 Jan 2015 00:37:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/html5-cross-documents-send-messages/</guid>
      <description>HTML5定义了一些javascript API，其中有一个就是跨文档消息传递（cross-document-messaging简称XDM）。</description>
    </item>
    <item>
      <title>HTMLImageElement类型的简便利用</title>
      <link>https://wuyizhou.com/posts/htmlimageelements/</link>
      <pubDate>Wed, 07 Jan 2015 20:09:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/htmlimageelements/</guid>
      <description>这个是我在复习书籍的时候看见的，当时一个同学想通过页面发送请求，但是数据量不是太大，所以用的get方式，但是页面用表单提交请求的话会让页面进</description>
    </item>
    <item>
      <title>HTML表单脚本</title>
      <link>https://wuyizhou.com/posts/html-from/</link>
      <pubDate>Wed, 07 Jan 2015 01:41:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/html-from/</guid>
      <description>在HTML中，表单由标签构成。在javascript中，是由HTMLFormElement类型构成，这个类型继承自HTMLElement类型</description>
    </item>
    <item>
      <title>JavascriptDOM事件</title>
      <link>https://wuyizhou.com/posts/javascript-dom-event/</link>
      <pubDate>Tue, 06 Jan 2015 02:47:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-dom-event/</guid>
      <description>Javascript与html之间的交互是通过事件进行交互。事件是通过侦听器（交互处理程序）来预定执行的。 页面中哪部分会拥有某个特点的事件？</description>
    </item>
    <item>
      <title>Javascript访问css样式信息</title>
      <link>https://wuyizhou.com/posts/javascript-get-css/</link>
      <pubDate>Sun, 04 Jan 2015 21:37:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-get-css/</guid>
      <description>DOM2级样式为style对象定义了一些属性和方法，可以通过这些方法属性来访问或者修改元素的样式信息： 1、cssText：可读写，在读的情况</description>
    </item>
    <item>
      <title>javscript布尔操作符</title>
      <link>https://wuyizhou.com/posts/javascript-bool/</link>
      <pubDate>Thu, 13 Feb 2014 01:14:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-bool/</guid>
      <description>在ECMAScript中提供了Boolean()转换函数以及三个布尔操作符，这三个布尔操作符分别为逻辑非、逻辑与、逻辑或，这三个操作符通常用</description>
    </item>
    <item>
      <title>Javascript中的迭代、归并方法</title>
      <link>https://wuyizhou.com/posts/javascript-reduce/</link>
      <pubDate>Tue, 12 Nov 2013 23:09:00 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/javascript-reduce/</guid>
      <description>迭代方法 🔗在Javascript中迭代方法个人觉得尤为重要，在很多时候都会有实际上的需求，javascript提供了5个迭代方法来供我们操作</description>
    </item>
    <item>
      <title>Javascript原生实现推箱子游戏</title>
      <link>https://wuyizhou.com/posts/js-sokoban-game/</link>
      <pubDate>Sun, 10 Feb 2013 03:23:43 +0000</pubDate>
      <guid>https://wuyizhou.com/posts/js-sokoban-game/</guid>
      <description>关于： 🔗这段代码主要是为了检验自己学习Javascript的成果，游戏其实很简单，主要思维，里面我尽量的标记注释了代码的重要思维的地方。在下</description>
    </item>
  </channel>
</rss>

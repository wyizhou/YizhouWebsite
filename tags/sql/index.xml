<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Lucas Wu</title>
    <link>https://vec6.com/tags/sql/</link>
    <description>Recent content in SQL on Lucas Wu</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 29 Dec 2024 21:36:34 +0000</lastBuildDate>
    <atom:link href="https://vec6.com/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用于数据科学的SQL</title>
      <link>https://vec6.com/blog/sqlforanalysis/</link>
      <pubDate>Sun, 29 Dec 2024 21:36:34 +0000</pubDate>
      <guid>https://vec6.com/blog/sqlforanalysis/</guid>
      <description>&lt;p&gt;如今在数据科学中使用SQL查询数据是常见的操作，而大部分以表格（行和列）展示数据的数据格式，几乎都支持使用SQL进行查询，比如Dataframe、Excel。&lt;/p&gt;&#xA;&lt;p&gt;同时通过Jupyter Notebook提供的Magic Statements和IPython_SQL，能够让SQL和Python进行非常方便的结合。&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql&#34;&gt;SQL&lt;/h2&gt;&#xA;&lt;p&gt;SQL全称为Structured Query Language 结构化查询语言，是基于Edgar F. Codd在1970年提出的关系模型理论，该模型引入了表（表格形式的数据结构）来表示数据以及其关系的概念，所以可以理解为最初的定位是用于操作和查询关系型数据库。&lt;/p&gt;&#xA;&lt;p&gt;SQL 于 1986 年被 &lt;strong&gt;ANSI&lt;/strong&gt;（美国国家标准学会）采纳，并于 1987 年被 &lt;strong&gt;ISO&lt;/strong&gt;（国际标准化组织）采纳为关系型数据库的标准语言，所以目前制定标准的主要由ANSI和ISO两个组织。&lt;/p&gt;&#xA;&lt;p&gt;SQL是一个标准，也是一个总称，SQL的定义了两个核心部分，第一个是标准的查询语句和标准的数据类型。&lt;/p&gt;&#xA;&lt;p&gt;除了上述的这些子集，还有一些扩展的高级功能的子集，比如对非结构化数据的支持，使得SQL能够支持NoSQL、NewSQL以及大数据系统应用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;查询语句&#34;&gt;查询语句&lt;/h2&gt;&#xA;&lt;p&gt;查询语句主要是围绕着DDL、DML、DCL以及TCL几个核心的子集开展，而常见的SELCT、CREATE都是属于这些子集，核心子集每个数据库（DBMS）都是支持的，但是每个数据库针对于SQL的扩展都会都会有一些差异，所以如果考虑到迁移性，应该尽可能使用标准的核心SQL语句。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ddldata-definition-language&#34;&gt;DDL（Data Definition Language）&lt;/h3&gt;&#xA;&lt;p&gt;DDL（数据定义语言），理解为数据库的地基，负责定义和修改数据库结构和对象（如表、视图和索引等），典型的语句有CREATE、ALTER和DROP等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dmldata-manipulation-language&#34;&gt;DML（Data Manipulation Language）&lt;/h3&gt;&#xA;&lt;p&gt;DML（数据操作语言），作用于操作数据库的数据，对数据库中的数据进行查询、插入、更新和删除等操作，典型的语句有 Select查询数据、 Insert插入数据、Update更新修改数据、 Delete删除数据等。&lt;/p&gt;&#xA;&lt;p&gt;DQL（Data Query Language）是专门用于查询的子集，但是是由DML下的子集，所以DML包含查询。&lt;/p&gt;&#xA;&lt;h3 id=&#34;dcldata-control-language&#34;&gt;DCL（Data Control Language）&lt;/h3&gt;&#xA;&lt;p&gt;DCL（数据控制语言），作用于控制用户权限，管理数据库对象的访问权限，典型的语句有Grant和Revoke等。&lt;/p&gt;&#xA;&lt;h3 id=&#34;tcltransaction-control-language&#34;&gt;TCL（Transaction Control Language）&lt;/h3&gt;&#xA;&lt;p&gt;TCL（事物控制语言）是SQL子集，作用于管理事物，确保数据库操作的完整性，典型的语句有Commit、Rollback和Savepoint等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数据类型&#34;&gt;数据类型&lt;/h2&gt;&#xA;&lt;p&gt;SQL除了操作查询数据的语句部分，还有定义了数据的类型，比如数值、字符串、日期、布尔值等，大部分都是比较好理解的，但日期则可以根据需求不同采用不同的日期类型，SQL定义了DATE、TIME和TIMESTAMP类型，主要差异在于：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;DATE：DATE类型有8位数，分别为YYYYMMDD。&lt;/li&gt;&#xA;&lt;li&gt;TIME：TIME类型有6位数，分别为HHMMSS。&lt;/li&gt;&#xA;&lt;li&gt;TIMESTAMP：TIMESTAMP有20位数，分别为YYYYXXDDHHMMSSZZZZZZ，其中XX代表月份，ZZZZZZ代表微秒。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;一些记录&#34;&gt;一些记录&lt;/h2&gt;&#xA;&lt;p&gt;大部分SQL可以很容易查询到用法，但是部分查询在性能和实现则有一定的区别，同时也有存在多种解决方式。&lt;/p&gt;&#xA;&lt;h3 id=&#34;primary-key&#34;&gt;Primary Key&lt;/h3&gt;&#xA;&lt;p&gt;数据库中主键有如下几个功能：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;唯一性：设置为主键的属性（数据库中被映射为了列），是唯一值，能够避免数据重复。&lt;/li&gt;&#xA;&lt;li&gt;一致性和完整性：主键确保表每一行都有一个唯一的标识符，这对于维护数据的一致性非常重要。&lt;/li&gt;&#xA;&lt;li&gt;关联性：在关系型数据库中，主键用于建立表与表之间的关系（通过外键引用）。&lt;/li&gt;&#xA;&lt;li&gt;加速：数据库在创建主键的时候，会为主键创建索引，使得通过主键查询会非常快。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;er模型和erd图&#34;&gt;ER模型和ERD图&lt;/h3&gt;&#xA;&lt;h4 id=&#34;entity-relationship-modeler模型&#34;&gt;Entity-Relationship Model（ER模型）&lt;/h4&gt;&#xA;&lt;p&gt;ER模型是用于设计实体关系模型的基础理论，关注实体（比如人）、实体的属性（比如人的头发、身高、体重、肤色等）以及相互之间的关联，ER模型的好处是可以针对字段进行规划关联、字段类型、主键以及多对一还是一对多等关系，同时设计完成后可以自动化生成sql进行自动建立数据库结构。&lt;/p&gt;&#xA;&lt;h4 id=&#34;entity-relationship-diagramerd图&#34;&gt;Entity Relationship Diagram（ERD图）&lt;/h4&gt;&#xA;&lt;p&gt;而ERD则是ER的一种图的实现，基于ER理论通过ERD进行设计实体关系图，会更加直观。&lt;/p&gt;&#xA;&lt;h4 id=&#34;优势&#34;&gt;优势&lt;/h4&gt;&#xA;&lt;p&gt;如果只是画图，很多都可以画，但是ER模型和ERD都是专用数据库设计的，所以有很多其它画图工具达不到的功能，比如自动根据ERD图生成SQL脚本。&lt;/p&gt;&#xA;&lt;h3 id=&#34;字符串查询和范围查询&#34;&gt;字符串查询和范围查询&lt;/h3&gt;&#xA;&lt;p&gt;SQL使用字符串进行查询，可以只给出部分关键词进行模糊查询，其中有%代表通配符（即匹配任何事情）。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
